@using Teema.Models

@model PostCreateModel

@using (Html.BeginForm("CreatePost", "Thread", FormMethod.Post)) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("teema", (object)Model.teema)
        @Html.HiddenFor(model => model.ParentPostId, Model.ParentPostId)
        @Html.HiddenFor(model => model.LinkId, Model.LinkId)
        <div class="form-group">
            <div class="col-lg-12">
                @Html.TextAreaFor(model => model.Message, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="pull-right" style="width:200px">
                <input type="submit" value="Post" class="btn btn-primary col-xs-5" />
                <a class="btn btn-danger col-xs-offset-1 col-xs-5" href="javascript:clearComment(@Model.ParentPostId)">Cancel</a>
            </div>
        </div>
    </div>
}

<script>
    $("form").on("submit", function (e) {
        e.preventDefault();  // prevent standard form submission
        var form = this;
        if ($(form).valid()) {
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    @*$('.post[data-postid=@Model.ParentPostId]').find('.comments').children('ul').first().prepend(result);*@
                    var parsedResult = JSON.parse(result);
                    var clone = $('.post').first().clone();
                    clone.attr('data-postid', result.Id);
                    clone.removeAttr('data-parentid');
                    clone.find('.comments').first().empty();
                    var modifyPost = clone.find('.vote-panel').children('.modify-post').detach();
                    modifyPost.show();
                    clone.find('.post-info').empty();
                    clone.find('.vote-panel').empty();
                    clone.find('.vote-panel').append(modifyPost);
                    clone.find('.media-heading').css('border', 'none');
                    clone.find('.user-link').remove();
                    clone.find('.message').text(parsedResult.Message);
                    clone.find('.media-left').find('img').attr('src', '/Account/GetAvatar?username=' + parsedResult.Username);
                    $('.post[data-postid=@Model.ParentPostId]').find('.comments').first().prepend(clone);
                    setupModifyButtons();
                    $(form).remove();
                }
            });
        }
    });

        function clearComment() {
            $('.post[data-postid=@Model.ParentPostId]').find('.comment').first().empty();
        }
</script>
